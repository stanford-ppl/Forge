
.. role:: black
.. role:: gray
.. role:: silver
.. role:: white
.. role:: maroon
.. role:: red
.. role:: fuchsia
.. role:: pink
.. role:: orange
.. role:: yellow
.. role:: lime
.. role:: green
.. role:: olive
.. role:: teal
.. role:: cyan
.. role:: aqua
.. role:: blue
.. role:: navy
.. role:: purple

.. _CSRGraph:

CSRGraph
========

<auto-generated stub>

Static methods
--------------

.. parsed-literal::

  :maroon:`def` apply(numNodes: Rep[:doc:`int`], numEdges: Rep[:doc:`int`], nodes: Rep[:doc:`forgearray`\[:doc:`int`\]], edges: Rep[:doc:`forgearray`\[:doc:`int`\]]): Rep[:doc:`csrgraph`]




*********

.. parsed-literal::

  :maroon:`def` apply(nodes: Rep[:doc:`densevector`\[:doc:`int`\]], edges: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`csrgraph`]




Infix methods
-------------

.. parsed-literal::

  :maroon:`def` deepcopy(): Rep[:doc:`csrgraph`]




*********

.. parsed-literal::

  :maroon:`def` edges(): Rep[:doc:`densevectorview`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` ngbrEdges(y: Rep[:doc:`int`]): Rep[:doc:`indexvector`]




*********

.. parsed-literal::

  :maroon:`def` ngbrNodes(y: Rep[:doc:`int`]): Rep[:doc:`densevectorview`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` ngbrs(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`csrngbr`\]]




*********

.. parsed-literal::

  :maroon:`def` nodes(): Rep[:doc:`densevectorview`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` numEdges(): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` numNodes(): Rep[:doc:`int`]




