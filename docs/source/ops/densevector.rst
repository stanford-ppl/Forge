
.. role:: black
.. role:: gray
.. role:: silver
.. role:: white
.. role:: maroon
.. role:: red
.. role:: fuchsia
.. role:: pink
.. role:: orange
.. role:: yellow
.. role:: lime
.. role:: green
.. role:: olive
.. role:: teal
.. role:: cyan
.. role:: aqua
.. role:: blue
.. role:: navy
.. role:: purple

.. _DenseVector:

DenseVector
===========

<auto-generated stub>

Static methods
--------------

.. parsed-literal::

  :maroon:`def` apply(x: Rep[:doc:`int`], y: Rep[:doc:`boolean`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` apply(x: Rep[T]*): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` apply(x: Rep[:doc:`forgearray`\[T\]], isRow: Rep[:doc:`boolean`] = true): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` flatten(pieces: Rep[:doc:`densevector`\[:doc:`densevector`\[T\]\]]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` ones(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` onesf(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` rand(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` randf(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` uniform(start: Rep[:doc:`double`], step\_size: Rep[:doc:`double`], end: Rep[:doc:`double`], isRow: Rep[:doc:`boolean`] = true): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` zeros(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` zerosf(x: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




Infix methods
-------------

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \*\*(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*\*(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*\*(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*\*(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` \*=(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` \*=(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` \*=(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]

 Math 


*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` +=(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]

 Math 


*********

.. parsed-literal::

  :maroon:`def` +=(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` +=(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` -=(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` -=(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` -=(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`sparsevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`sparsevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`int`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`float`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/(y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` \/=(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` \/=(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` \/=(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` :<(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Ordering[T]): Rep[:doc:`densevector`\[:doc:`boolean`\]]




*********

.. parsed-literal::

  :maroon:`def` :>(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Ordering[T]): Rep[:doc:`densevector`\[:doc:`boolean`\]]




*********

.. parsed-literal::

  :maroon:`def` <<(y: Rep[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` <<(y: Rep[:doc:`densevector`\[T\]]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` <<=(y: Rep[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` <<=(y: Rep[:doc:`densevector`\[T\]]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` Clone(): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` abs()(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` apply(y: Rep[:doc:`int`]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` apply(y: Rep[:doc:`indexvector`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` clear(): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` contains(y: Rep[T]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` copyFrom(y: Rep[:doc:`int`], z: Rep[:doc:`densevector`\[T\]]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` count(y: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` distinct(): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` drop(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` exists(y: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` exp()(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` filter(y: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` find(y: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`indexvector`]




*********

.. parsed-literal::

  :maroon:`def` first(): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` flatMap(y: (Rep[T]) => Rep[:doc:`densevector`\[R\]]): Rep[:doc:`densevector`\[R\]]




*********

.. parsed-literal::

  :maroon:`def` forall(y: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` foreach(y: (Rep[T]) => Rep[Unit]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` groupBy(y: (Rep[T]) => Rep[K], z: (Rep[T]) => Rep[V]): Rep[:doc:`forgehashmap`\[K,:doc:`densevector`\[V\]\]]




*********

.. parsed-literal::

  :maroon:`def` groupByReduce(y: (Rep[T]) => Rep[K], z: (Rep[T]) => Rep[V], v: (Rep[V],Rep[V]) => Rep[V])(:maroon:`implicit` ev0: Arith[V]): Rep[:doc:`forgehashmap`\[K,V\]]

 Bulk 


*********

.. parsed-literal::

  :maroon:`def` histogram(): Rep[:doc:`forgehashmap`\[T,:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` indices(): Rep[:doc:`indexvector`]

 Accessors 


*********

.. parsed-literal::

  :maroon:`def` insert(y: Rep[:doc:`int`], z: Rep[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` insertAll(y: Rep[:doc:`int`], z: Rep[:doc:`densevector`\[T\]]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` intersect(y: Rep[:doc:`densevector`\[T\]]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` isEmpty(): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` isRow(): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` last(): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` length(): Rep[:doc:`int`]

 Accessors 


*********

.. parsed-literal::

  :maroon:`def` log()(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` makeStrWithDelim(delim: Rep[:doc:`string`])(:maroon:`implicit` ev0: Stringable[T]): Rep[:doc:`string`]




*********

.. parsed-literal::

  :maroon:`def` makeString()(:maroon:`implicit` ev0: Stringable[T]): Rep[:doc:`string`]




*********

.. parsed-literal::

  :maroon:`def` map(y: (Rep[T]) => Rep[R]): Rep[:doc:`densevector`\[R\]]

 Bulk 


*********

.. parsed-literal::

  :maroon:`def` max()(:maroon:`implicit` ev0: Ordering[T],ev1: HasMinMax[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` maxIndex()(:maroon:`implicit` ev0: Ordering[T]): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` mean()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`double`]): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` median()(:maroon:`implicit` ev0: Numeric[T],ev1: Ordering[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` min()(:maroon:`implicit` ev0: Ordering[T],ev1: HasMinMax[T]): Rep[T]

 Ordering 


*********

.. parsed-literal::

  :maroon:`def` minIndex()(:maroon:`implicit` ev0: Ordering[T]): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` mt(): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` mutable(): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` partition(pred: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`tup2`\[:doc:`densevector`\[T\],:doc:`densevector`\[T\]\]]




*********

.. parsed-literal::

  :maroon:`def` pprint()(:maroon:`implicit` ev0: Stringable[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` prefixSum()(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` prod()(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` reduce(y: (Rep[T],Rep[T]) => Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` remove(y: Rep[:doc:`int`]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` removeAll(pos: Rep[:doc:`int`], len: Rep[:doc:`int`]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` replicate(y: Rep[:doc:`int`], z: Rep[:doc:`int`]): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` scanLeft(zero: Rep[R])(z: (Rep[R],Rep[T]) => Rep[R]): Rep[:doc:`densevector`\[R\]]




*********

.. parsed-literal::

  :maroon:`def` scanRight(zero: Rep[R])(z: (Rep[T],Rep[R]) => Rep[R]): Rep[:doc:`densevector`\[R\]]




*********

.. parsed-literal::

  :maroon:`def` slice(start: Rep[:doc:`int`], end: Rep[:doc:`int`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` sort()(:maroon:`implicit` ev0: Ordering[T]): Rep[:doc:`densevector`\[T\]]

 Ordering 


*********

.. parsed-literal::

  :maroon:`def` sortBy(y: (Rep[T]) => Rep[B])(:maroon:`implicit` ev0: Ordering[B]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` sortWithIndex()(:maroon:`implicit` ev0: Ordering[T]): Tuple2[Rep[:doc:`densevector`\[T\]],Rep[:doc:`indexvector`]]




*********

.. parsed-literal::

  :maroon:`def` stddev()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`double`]): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` sum()(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` t(): Rep[:doc:`densevector`\[T\]]

 Miscellaneous 


*********

.. parsed-literal::

  :maroon:`def` take(y: Rep[:doc:`int`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toArray(): Rep[:doc:`forgearray`\[T\]]

 Data exchange 


*********

.. parsed-literal::

  :maroon:`def` toBoolean()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`boolean`]): Rep[:doc:`densevector`\[:doc:`boolean`\]]

 Conversions 


*********

.. parsed-literal::

  :maroon:`def` toDense(): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toDouble()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`double`]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` toFloat()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`float`]): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` toInt()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`int`]): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` toMat(): Rep[:doc:`densematrix`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toString(): Rep[:doc:`string`]




*********

.. parsed-literal::

  :maroon:`def` trim(): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` unary\_-(): Rep[:doc:`densevector`\[:doc:`int`\]]




*********

.. parsed-literal::

  :maroon:`def` unary\_-(): Rep[:doc:`densevector`\[:doc:`float`\]]




*********

.. parsed-literal::

  :maroon:`def` unary\_-(): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` update(i: Rep[:doc:`int`], e: Rep[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` update(indices: Rep[:doc:`indexvector`], e: Rep[T]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` update(indices: Rep[:doc:`indexvector`], v: Rep[:doc:`densevector`\[T\]]): Rep[Unit]




*********

.. parsed-literal::

  :maroon:`def` variance()(:maroon:`implicit` ev0: (Rep[T]) => Rep[:doc:`double`]): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` zip(y: Rep[:doc:`densevector`\[B\]])(z: (Rep[T],Rep[B]) => Rep[R]): Rep[:doc:`densevector`\[R\]]




*********

.. parsed-literal::

  :maroon:`def` zip(y: Rep[:doc:`densevectorview`\[B\]])(z: (Rep[T],Rep[B]) => Rep[R]): Rep[:doc:`densevector`\[R\]]




Implicit methods
----------------

.. parsed-literal::

  :maroon:`def` dist(x: Rep[:doc:`densevector`\[:doc:`double`\]], y: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`double`]




Related methods
---------------

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`densevector`\\[T\\]], y: Rep[:doc:`densevector`\[T\]]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`densevector`\\[T\\]], y: Rep[:doc:`densevectorview`\[T\]]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`densevector`\\[T\\]], y: Rep[:doc:`indexvector`]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`densevector`\\[T\\]], y: Rep[:doc:`sparsevector`\[T\]]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` densevector\_fromarray(x: Rep[:doc:`forgearray`\[T\]], y: Rep[:doc:`boolean`]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` densevector\_fromfunc(x: Rep[:doc:`int`], y: Rep[:doc:`boolean`], z: (Rep[:doc:`int`]) => Rep[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` dist(x: Rep[:doc:`densevector`\[:doc:`double`\]], y: Rep[:doc:`densevector`\[:doc:`double`\]], z: DistanceMetric): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` norm(x: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` norm(x: Rep[:doc:`densevector`\[:doc:`double`\]], y: NormId): Rep[:doc:`double`]




