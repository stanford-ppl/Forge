
.. role:: black
.. role:: gray
.. role:: silver
.. role:: white
.. role:: maroon
.. role:: red
.. role:: fuchsia
.. role:: pink
.. role:: orange
.. role:: yellow
.. role:: lime
.. role:: green
.. role:: olive
.. role:: teal
.. role:: cyan
.. role:: aqua
.. role:: blue
.. role:: navy
.. role:: purple

.. _RandomForest:

RandomForest
============

<auto-generated stub>

Infix methods
-------------

.. parsed-literal::

  :maroon:`def` predict(testPt: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`tup2`\[:doc:`double`,:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` probabilities(testPt: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`densevector`\[:doc:`double`\]]




*********

.. parsed-literal::

  :maroon:`def` score(testPt: Rep[:doc:`densevector`\[:doc:`double`\]]): Rep[:doc:`double`]




*********

.. parsed-literal::

  :maroon:`def` trees(): Rep[:doc:`densevector`\[:doc:`decisiontree`\]]




Related methods
---------------

.. parsed-literal::

  :maroon:`def` alloc\_forest(trees: Rep[:doc:`densevector`\[:doc:`decisiontree`\]]): Rep[:doc:`randomforest`]




