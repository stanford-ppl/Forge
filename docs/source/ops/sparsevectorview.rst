
.. role:: black
.. role:: gray
.. role:: silver
.. role:: white
.. role:: maroon
.. role:: red
.. role:: fuchsia
.. role:: pink
.. role:: orange
.. role:: yellow
.. role:: lime
.. role:: green
.. role:: olive
.. role:: teal
.. role:: cyan
.. role:: aqua
.. role:: blue
.. role:: navy
.. role:: purple

.. _SparseVectorView:

SparseVectorView
================

<auto-generated stub>

Static methods
--------------

.. parsed-literal::

  :maroon:`def` apply(x: Rep[:doc:`sparsematrix`\[T\]], y: Rep[:doc:`long`], z: Rep[:doc:`int`], v: Rep[:doc:`int`], w: Rep[:doc:`boolean`]): Rep[:doc:`sparsevectorview`\\[T\\]]




Infix methods
-------------

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[T])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*(y: Rep[:doc:`densematrix`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`densevector`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` \*:\*(y: Rep[:doc:`densevectorview`\[T\]])(:maroon:`implicit` ev0: Arith[T]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` Clone(): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` apply(y: Rep[:doc:`int`]): Rep[T]




*********

.. parsed-literal::

  :maroon:`def` indices(): Rep[:doc:`indexvector`]




*********

.. parsed-literal::

  :maroon:`def` isRow(): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` length(): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` nnz(): Rep[:doc:`int`]




*********

.. parsed-literal::

  :maroon:`def` nz(): Rep[:doc:`densevectorview`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toDense(): Rep[:doc:`densevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toSparse(): Rep[:doc:`sparsevector`\[T\]]




*********

.. parsed-literal::

  :maroon:`def` toString(): Rep[:doc:`string`]




Implicit methods
----------------

.. parsed-literal::

  :maroon:`def` chainViewToSparseOps(self: Rep[:doc:`sparsevectorview`\\[T\\]]): SparseVectorSparseVectorOpsCls[T]




*********

.. parsed-literal::

  :maroon:`def` viewToSparse(self: Rep[:doc:`sparsevectorview`\\[T\\]]): Rep[:doc:`sparsevector`\[T\]]




Related methods
---------------

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`sparsevectorview`\\[T\\]], y: Rep[:doc:`sparsevectorview`\[T\]]): Rep[:doc:`boolean`]




*********

.. parsed-literal::

  :maroon:`def` \_\_equal(self: Rep[:doc:`sparsevectorview`\\[T\\]], y: Rep[:doc:`sparsevector`\[T\]]): Rep[:doc:`boolean`]




